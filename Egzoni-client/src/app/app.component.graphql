query getProducts(
  $cursor: String
  $first: Int
  $brandId: Int
  $categoryId: Int
  $minPrice: Decimal
  $maxPrice: Decimal
) {
  productsAsync(
    first: $first
    after: $cursor
    order: { id: DESC }
    brandId: $brandId
    categoryId: $categoryId
    minPrice: $minPrice
    maxPrice: $maxPrice
  ) {
    nodes {
      id
      code
      description
      size
      color
      quantity
      purchasePrice
      retailPrice
      profit
      pictureUrls
      brandId
      categoryId
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}

query getCategories {
  categories {
    id
    name
  }
}
query getBrands {
  brands {
    id
    name
  }
}
query searchProducts($code: String) {
  productsAsync(where: { code: { eq: $code } }) {
    edges {
      node {
        code
        size
        color
        quantity
        retailPrice
        purchasePrice
        profit
      }
    }
  }
}

mutation addProductss(
  $code: String!
  $size: String!
  $description: String!
  $quantity: Decimal!
  $color: String!
  $retailPrice: Decimal!
  $purchasePrice: Decimal!
  $brandId: Int!
  $categoryId: Int!
  $image: [Upload!]! # Add the pictureUrl variable
) {
  addProduct(
    input: {
      code: $code
      size: $size
      color: $color
      description: $description
      quantity: $quantity
      retailPrice: $retailPrice
      purchasePrice: $purchasePrice
      categoryId: $categoryId
      brandId: $brandId
      image: $image
    }
  ) {
    id
    code
    size
    color
    description
    quantity
    purchasePrice
    retailPrice
    brandId
    categoryId
    pictureUrls
  }
}

# mutation UpdateQuantity($id: Int!, $newQuantity: Decimal!) {
#   updateQuantity(id: $id, newQuantity: $newQuantity) {
#     id
#     brandId
#     categoryId
#     code
#     color
#     description
#     pictureUrl
#     profit
#     purchasePrice
#     quantity
#     retailPrice
#     size
#   }
# }

mutation AddBrandAsync($name: String!) {
  addBrand(brandInput: { name: $name }) {
    id
    name
  }
}
mutation AddCategoryAsync($name: String!) {
  addCategory(categoryInput: { name: $name }) {
    id
    name
  }
}

mutation editProduct($quantity: Decimal!, $id: Int) {
  update(input: { quantity: $quantity, id: $id }) {
    products {
      id
      code
      size
      color
      description
      quantity
      purchasePrice
      retailPrice
      brandId
      categoryId
      pictureUrls
    }
  }
}

mutation deleteProduct($id: Int!) {
  removeProductsById(id: $id)
}
mutation Login($username: String!, $password: String!) {
  login(loginInput: { username: $username, password: $password }) {
    administrator {
      id
      password
      salt
      token
      username
    }
  }
}
query GetProductById($id: Int!) {
  productById(id: $id) {
    brandId
    categoryId
    code
    color
    description
    id
    pictureUrls
    profit
    purchasePrice
    quantity
    retailPrice
    size
  }
}
