query getProducts(
  $cursor: String
  $last: Int
  $first: Int
  $brandId: Int
  $categoryId: Int
  $minPrice: Decimal
  $maxPrice: Decimal
) {
  productsAsync(
    last: $last
    first: $first
    after: $cursor
    order: { id: DESC }
    brandId: $brandId
    categoryId: $categoryId
    minPrice: $minPrice
    maxPrice: $maxPrice
  ) {
    nodes {
      id
      code
      description
      size
      color
      quantity
      purchasePrice
      retailPrice
      profit
      pictureUrls
      brandId
      categoryId
      thumbnailUrl
      sales {
       discountedPrice
        discountPercentage
        endDate
        id
        isValidSalePeriod
        productId
        startDate
      }
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}

query getAllOrders($before: String, $after: String) {
  allOrders(before: $before, after: $after, order: { id: DESC }) {
    nodes {
      additionalMessage
      costumerName
      deliveryAddress
      email
      id
      orderDate
      phoneNumber
      totalPrice
      orderItems {
        code
        id
        orderId
        price
        productId
        quantity
      }
    }
    edges {
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
      hasPreviousPage
      startCursor
    }
  }
}

mutation AddOnSaleProducts($discountPercentage: Float!, $productIds: [Int!]!, $startDate: DateTime!, $endDate: DateTime!) {
  addProductOnSale(
    input: { discountPercentage: $discountPercentage, productIds: $productIds, startDate: $startDate, endDate: $endDate }
  ) {
    discountedPrice
    discountPercentage
    endDate
    id
    isValidSalePeriod
    startDate
  }
}


query searchByCostumerName($customerNameSearch: String) {
  allOrders(where: { costumerName: { startsWith: $customerNameSearch } }) {
    edges {
      cursor
    }
    nodes {
      additionalMessage
      costumerName
      deliveryAddress
      email
      id
      orderDate
      phoneNumber
      totalPrice
    }
  }
}
query getSalesForYear ($year: Int!) {
  monthlyPricesAndStatsForYear(year:$year
  ) {
    month
    monthName
    mostSoldProductCode
    totalOrders
    totalPurchasePrice
    totalRetailPrice
    year
  }
}
query getOrdersAndStatsForYear($year: Int!) {
  ordersAndStatsForYear(year: $year) {
    month
    monthName
    mostSoldProductCode
    totalOrders
    year
  }
}

query tenMostSoldProducts {
  tenMostSoldProducts {
    productId
    brand
    category
    productCode
    quantitySold
  }
}

query getCategories {
  categories {
    id
    name
  }
}

query getBrands {
  brands {
    id
    name
  }
}

query searchProducts($code: String) {
  productsAsync(where: { code: { eq: $code } }) {
    edges {
      node {
        code
        size
        color
        quantity
        retailPrice
        purchasePrice
        profit
      }
    }
  }
}


mutation addProductss(
  $code: String!
  $size: String!
  $description: String!
  $quantity: Decimal!
  $color: String!
  $retailPrice: Decimal!
  $purchasePrice: Decimal!
  $brandId: Int!
  $categoryId: Int!
  $image: [Upload!]! # Add the pictureUrl variable
) {
  addProduct(
    input: {
      code: $code
      size: $size
      color: $color
      description: $description
      quantity: $quantity
      retailPrice: $retailPrice
      purchasePrice: $purchasePrice
      categoryId: $categoryId
      brandId: $brandId
      image: $image
    }
  ) {
    id
    code
    size
    color
    description
    quantity
    purchasePrice
    retailPrice
    brandId
    categoryId
    pictureUrls
  }
}

# mutation UpdateQuantity($id: Int!, $newQuantity: Decimal!) {
#   updateQuantity(id: $id, newQuantity: $newQuantity) {
#     id
#     brandId
#     categoryId
#     code
#     color
#     description
#     pictureUrl
#     profit
#     purchasePrice
#     quantity
#     retailPrice
#     size
#   }
# }

mutation PlaceOrder($input: OrderInput!) {
  placeOrder(input: $input) {
    id
    deliveryAddress
    costumerName
    email
    phoneNumber
    additionalMessage
    orderDate
    totalPrice
    orderItems {
      productId
      quantity
      price
    }
  }
}

mutation AddBrandAsync($name: String!) {
  addBrand(brandInput: { name: $name }) {
    id
    name
  }
}

mutation AddCategoryAsync($name: String!) {
  addCategory(categoryInput: { name: $name }) {
    id
    name
  }
}

mutation editProduct($quantity: Decimal!, $id: Int) {
  update(input: { quantity: $quantity, id: $id }) {
    products {
      id
      code
      size
      color
      description
      quantity
      purchasePrice
      retailPrice
      brandId
      categoryId
      pictureUrls
    }
  }
}

mutation deleteProduct($id: Int!) {
  removeProductsById(id: $id)
}

mutation Login($username: String!, $password: String!) {
  login(loginInput: { username: $username, password: $password }) {
    administrator {
      id
      password
      salt
      token
      username
    }
  }
}

query GetProductById($id: Int!) {
  productById(id: $id) {
    brandId
    categoryId
    code
    color
    description
    id
    pictureUrls
    profit
    purchasePrice
    quantity
    retailPrice
    size
    thumbnailUrl
    sales {
      discountedPrice
        discountPercentage
        endDate
        id
        isValidSalePeriod
        productId
        startDate
    }
  }
}
